<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Java学习路线（一）</title>
    <url>/2020/05/21/Java%E5%AD%A6%E4%B9%A0%E8%B7%AF%E7%BA%BF%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h1 id="Java后端学习流程图之基础部分"><a href="#Java后端学习流程图之基础部分" class="headerlink" title="Java后端学习流程图之基础部分"></a>Java后端学习流程图之基础部分</h1><p>编程基础之Java语言 </p>
<p>语言基础 </p>
<pre><code>基础语法
面向对象
接口
容器
异常
泛型
反射
注释
IO
图形化（Swing）</code></pre><p>JVM </p>
<pre><code>类加载机制 
字节码执行机制
JVM内存模型
GC垃圾回收
JVM性能监控与故障定位
JVM调优</code></pre><p>并发多线程  </p>
<pre><code>并发编程基础
线程池
锁
并发容器
原子类
JUC并发工具 </code></pre>]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
      <tags>
        <tag>Java</tag>
        <tag>后端</tag>
      </tags>
  </entry>
  <entry>
    <title>音乐播放器</title>
    <url>/2020/05/21/%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8/</url>
    <content><![CDATA[<h1 id="First"><a href="#First" class="headerlink" title="First"></a>First</h1><h2 id="Home页面初始化"><a href="#Home页面初始化" class="headerlink" title="Home页面初始化"></a>Home页面初始化</h2><pre><code>&lt;template&gt;
  &lt;div class=&quot;home&quot;&gt;
  &lt;/div&gt;
&lt;/template&gt;</code></pre><h3 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h3><pre><code>&lt;style lang=&quot;scss&quot;&gt;
.home {
  position: relative;
  z-index: 0;
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  background-color: #ffedff;
}
&lt;/style&gt;</code></pre><h1 id="SECOND"><a href="#SECOND" class="headerlink" title="SECOND"></a>SECOND</h1><h3 id="从View切换到Componet"><a href="#从View切换到Componet" class="headerlink" title="从View切换到Componet"></a>从View切换到Componet</h3><h3 id="编写player组件"><a href="#编写player组件" class="headerlink" title="编写player组件"></a>编写player组件</h3><p><del>此处只写一个template标签，随后切换回View/home</del></p>
<p>在Home界面中导入写好的组件（此处关于vue组件的复用可以查阅资料）</p>
<pre><code>&lt;script&gt;
import Player from &#39;../components/Player.vue&#39;
export default {
  components: {
    Player
  }
}
&lt;/script&gt;</code></pre><h2 id="返回编写Player组件"><a href="#返回编写Player组件" class="headerlink" title="返回编写Player组件"></a>返回编写Player组件</h2><h3 id="First-盒子"><a href="#First-盒子" class="headerlink" title="First-盒子"></a>First-盒子</h3><pre><code>&lt;template&gt;
  &lt;div class=&quot;player&quot;&gt;
    &lt;div class=&quot;player_disk&quot;&gt;  &lt;/div&gt;
    &lt;div class=&quot;player_control&quot;&gt;&lt;/div&gt;
    &lt;div class=&quot;player_progress&quot;&gt; &lt;/div&gt;
  &lt;/div&gt;
&lt;/template&gt;</code></pre><h3 id="Second-样式"><a href="#Second-样式" class="headerlink" title="Second-样式"></a>Second-样式</h3><pre><code>&lt;style lang=&quot;scss&quot;&gt;
.player {
  position: relative;
  display: flex;
  max-width: 300px;
  max-height: 75px;
  width: 300px;
  height: 75px;
  border-radius: 8px;
  background-color: white;
  box-shadow: 0 30px 60px rgba(0, 0, 0, 0.12),
    0 20px 20px rgba(95, 23, 101, 0.2);
}
.player_disk {
  flex: 1.2;
  padding: 12px;
}
.player_control {
  flex: 2;
  padding: 12px 0;
  padding-right: 12px;
}
.player_progress {
  position: absolute;
  left: 9px;
  right: 9px;
  top: 0;
  bottom: 25px;
  z-index: -1;
}
&lt;/style&gt;</code></pre><h3 id="跳转到Compent中编写Disk组件"><a href="#跳转到Compent中编写Disk组件" class="headerlink" title="跳转到Compent中编写Disk组件"></a>跳转到Compent中编写Disk组件</h3><h4 id="先写template"><a href="#先写template" class="headerlink" title="先写template"></a>先写template</h4><pre><code>&lt;template&gt;
  &lt;div class=&quot;disk&quot;&gt;   
  &lt;/div&gt;
&lt;/template&gt;</code></pre><h6 id="把Disk导入到Player中"><a href="#把Disk导入到Player中" class="headerlink" title="把Disk导入到Player中"></a>把Disk导入到Player中</h6><pre><code>&lt;script&gt;
import Disk from &#39;./Disk.vue&#39;
export default {
  components: {
    Disk,
  }
}
&lt;/script&gt;</code></pre><h1 id="插入Disk组件"><a href="#插入Disk组件" class="headerlink" title="插入Disk组件"></a>插入Disk组件</h1><pre class=" language-vue"><code class="language-vue">  <disk /></code></pre>
<h1 id="不懂的部分-上传文件"><a href="#不懂的部分-上传文件" class="headerlink" title="不懂的部分-上传文件"></a>不懂的部分-上传文件</h1><pre><code> &lt;div class=&quot;disk&quot;// :class=&quot;{ disk__playing: isPlaying }&quot;&gt;
    &lt;label
      class=&quot;disk_cover&quot;
      ref=&quot;cover&quot;
      for=&quot;file&quot;
      :style=&quot;{
        transform: stopMatrix,
        backgroundImage: coverUrl ? `url(${coverUrl})` : &#39;&#39;
      }&quot;
    /&gt;
    &lt;input
      id=&quot;file&quot;
      ref=&quot;file&quot;
      type=&quot;file&quot;
      accept=&quot;.mp3&quot;
      multiple
      @change=&quot;handleChange&quot;
    /&gt;
  &lt;/div&gt;</code></pre><h3 id="编写Disk的CSS"><a href="#编写Disk的CSS" class="headerlink" title="编写Disk的CSS"></a>编写Disk的CSS</h3><pre><code>&lt;style lang=&quot;scss&quot;&gt;
.disk {
  position: relative;
  padding-top: 100%;
  border-radius: 100%;
  overflow: hidden;
  transform: translateY(-50%) scale(0.88);
  transform-origin: center bottom;
  transition: all 0.6s ease;
}
.disk input {
  display: none;
}
.disk_cover {
  position: absolute;
  top: -10px;
  left: -10px;
  right: -10px;
  bottom: -10px;
  background-image: radial-gradient(circle, #444 0%, #333 100%);
  background-size: cover;
  background-position: center;
}
.disk_cover::after {
  content: &#39;&#39;;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -8px;
  margin-top: -8px;
  width: 16px;
  height: 16px;
  border-radius: 100%;
  background-image: linear-gradient(45deg, white, #dabad1);
  box-shadow: 0 1px 1px 1px rgba(0, 0, 0, 0.2);
}
.disk__playing {
  transform: translateY(-50%);
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1),
    0 20px 20px -10px rgba(108, 29, 171, 0.3);
}
.disk__playing .disk_cover {
  animation: rotate infinite 6s linear;
}
    @keyframes rotate {
  from {
    transform: rotate(0);
  }
  to {
    transform: rotate(360deg);
  }
}
    &lt;/style&gt;</code></pre>]]></content>
      <categories>
        <category>vue</category>
      </categories>
      <tags>
        <tag>api</tag>
        <tag>Markdown</tag>
      </tags>
  </entry>
</search>
